<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.wsdy.saasops.modules.analysis.mapper.AnalysisMapper">

    <sql id="gameTableSql">
        (
            select tb1.depotName as platform,tb1.depotId,tb2.catName,tb2.id as catId,tb1.gameCode as codeid,tb1.gameName as codename
            from
            (
                SELECT * FROM
                (
                    select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
                    union
                    select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
                    union
                    select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
                    union
                    select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
                    union
                    select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
                    union
                    select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !=''
                ) d
                GROUP BY d.depotId,d.catId,d.gameCode
                ORDER BY d.gameCode
            )tb1,t_gm_cat tb2
            where tb1.catId=tb2.id
		)
    </sql>

    <sql id="joinUserAndAgentTableSql_Loginname">
        <!-- LEFT JOIN mbr_account mbr on tb.username=mbr.loginName -->
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
    </sql>

    <select id="getGameList" resultType="com.wsdy.saasops.modules.operate.entity.TGmGame">
        select t.platform as depotName,t.codeid as gameCode,t.catName
        from <include refid="gameTableSql"/> t
        where 1=1
        <if test="platFormNames!=null">
            AND t.platform in
            <foreach collection="platFormNames" item="pf" open="(" close=")" separator=",">
                #{pf}
            </foreach>
        </if>
    </select>

    <select id="getPlatForm"  resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel">
       SELECT 
       depot.depotCode as `key`,IFNULL(setg.depotname,depot.depotName) as `value`, depot.id as `id`
       FROM t_gm_depot depot
	       LEFT JOIN t_game_logo logo ON logo.depotid = depot.id
		   LEFT JOIN set_gm_game setg ON setg.depotid = depot.id AND logo.id = setg.gamelogoid
		   LEFT JOIN t_gm_api api ON depot.id=api.depotId
		   LEFT JOIN t_gm_apiprefix fix ON api.id=fix.apiId
		   LEFT JOIN t_cp_site site ON site.id=fix.siteId
           LEFT JOIN saasops_manage.t_gm_depotcat dc ON depot.id = dc.depotId
           LEFT JOIN saasops_manage.t_gm_cat c ON dc.catId = c.id
       WHERE site.siteCode=#{siteCode}
	   AND fix.prefix=#{siteCode}
	   AND fix.available!=0
	   AND depot.available = 1
       GROUP BY depot.depotCode
	</select>

    <select id="getPlatFormWithOrder"  resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel">
       SELECT
         depot.depotCode as `key`,IFNULL(setg.depotname,depot.depotName) as `value`, depot.id as `id`,
         tgc.sortid catSortId, setg.sortid siteSortId, depot.sortid
         FROM t_gm_depot depot
         LEFT JOIN t_game_logo logo ON logo.depotid = depot.id
         LEFT JOIN set_gm_game setg ON setg.depotid = depot.id AND logo.id = setg.gamelogoid
         LEFT JOIN t_gm_api api ON depot.id=api.depotId
         LEFT JOIN t_gm_apiprefix fix ON api.id=fix.apiId
         LEFT JOIN t_cp_site site ON site.id=fix.siteId
         LEFT JOIN t_gm_depotcat tgd ON tgd.depotid = depot.id
         LEFT JOIN t_gm_cat tgc ON tgc.id = tgd.catid
        WHERE site.siteCode=#{siteCode}
        AND fix.prefix=#{siteCode}
        AND fix.available!=0
        AND depot.available = 1 GROUP BY depot.depotCode
        ORDER BY catSortId ASC, setg.sortid = 0 ASC, setg.sortid ASC,depot.sortid ASC, depot.createtime DESC
	</select>

    <select id="getGameType" parameterType="String"  resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel">
        select c.id as `key`,c.catName as `value`
        from (
            select depot.*
            from t_gm_depot depot
            left join t_gm_api api on depot.id=api.depotId
            left join t_gm_apiprefix fix on api.id=fix.apiId
            left join t_cp_site site on site.id=fix.siteId
            where site.siteCode=#{siteCode}
            AND fix.prefix=#{siteCode}
            AND fix.available!=0
            AND depot.available=1
        ) d
        LEFT JOIN t_gm_depotcat dc on d.id=dc.depotId
        LEFT JOIN t_gm_cat c on dc.catId=c.id
        where d.depotCode=#{platFormId}
        <if test=" parentId !=null">
            and c.parentId=#{parentId}
        </if>
    </select>

    <select id="getAgentAccount"  resultType="java.util.Map">
		select a.id as parentId,a.agyAccount as parentName,b.id,b.agyAccount as agyAccount from agy_account a
		left  JOIN agy_account b on a.id=b.parentId
		where a.parentId=0
	</select>

    <select id="getRptBetDay" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetDayModel">
        select
        <if test=" group_head ==null or group_head ==''">
            a.*
        </if>
        <if test=" group_head !=null and group_head !='' ">
            ${group_head},sum(bet) bet,sum(validbet) validbet,sum(payout) payout,sum(payoff) payoff,sum(payoffbet) payoffbet,sum(winnings) winnings,sum(tip) tip,sum(deposit) deposit,
            sum(withdrawal) withdrawal,sum(rebate) rebate,sum(quantity) quantity,count(username) counts
        </if>
        from rpt_bet_rcd_day a
        LEFT JOIN mbr_account mbr on a.username=mbr.loginName
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        left join t_gm_game gm on a.gametype=gm.gameCode
        left join t_gm_cat c on gm.catId=c.id
        where 1=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" loginName !=null and loginName !='' ">
            And mbr.loginName like CONCAT('%',#{loginName}, '%')
        </if>
        <if test=" platform !=null and platform !='' ">
            And a.platform=#{platform}
        </if>
        <if test=" gametype !=null and gametype !='' ">
            And a.gametype=#{gametype}
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And a.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And a.startday &lt;= DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        <if test=" groups !=null and groups !='' ">
            group by ${groups}
        </if>
        order by startday desc
    </select>

    <select id="getFundStatistics" resultType="com.wsdy.saasops.modules.analysis.entity.FundStatisticsModel">
        select date,sum(deposit) deposit,sum(profit) profit,sum(withdraw) withdraw,sum(payout) payout from (
        select DATE_FORMAT(deposit.createTime,'%Y-%m-%d') date,sum(deposit.depositAmount) deposit,sum(bonus.bonusAmount) profit,0 as withdraw,0 as payout
        from fund_deposit deposit LEFT JOIN mbr_account mbr on deposit.accountId=mbr.id
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        LEFT JOIN opr_act_bonus bonus on bonus.depositId=deposit.id
        where deposit.`status`=1
        and bonus.`status`=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" loginName !=null and loginName !='' ">
            And mbr.loginName like CONCAT('%',#{loginName}, '%')
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And deposit.createTime &gt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And deposit.createTime &lt;= #{betEndTime}
        </if>
        GROUP BY DATE_FORMAT(deposit.createTime,'%Y-%m-%d')
        UNION all
        select DATE_FORMAT(withdraw.createTime,'%Y-%m-%d') date,0 as deposit,0 as profit,sum(withdraw.actualArrival) as withdraw,0 as payout
        from fund_acc_withdraw withdraw LEFT JOIN mbr_account mbr on withdraw.accountId=mbr.id
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where withdraw.`status`=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" loginName !=null and loginName !='' ">
            And mbr.loginName like CONCAT('%',#{loginName}, '%')
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And withdraw.createTime &gt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And withdraw.createTime &lt;= #{betEndTime}
        </if>
        GROUP BY DATE_FORMAT(withdraw.createTime,'%Y-%m-%d')
        union ALL
        select a.startday date,0 as deposit,0 as profit,0 as withdraw,sum(a.payout) as payout
        from rpt_bet_rcd_day a LEFT JOIN mbr_account mbr on a.username=mbr.loginName
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        WHERE 1=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" loginName !=null and loginName !='' ">
            And mbr.loginName like CONCAT('%',#{loginName}, '%')
        </if>
        <if test=" platform !=null and platform !='' ">
            And a.platform=#{platform}
        </if>
        <if test=" gametype !=null and gametype !='' ">
            And a.gametype=#{gametype}
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And a.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And a.startday &lt;=DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        GROUP BY a.startday
        ) t
        GROUP BY date
        order by date desc;
    </select>

    <select id="getFundReport" resultType="com.wsdy.saasops.modules.analysis.entity.FundReportModel">
        select sum(payout) as payout,sum(discount) as discount,sum(withdraw) as memberWithdraw,sum(agy_withdraw) as agyWithdraw,sum(commission) as commission
        ,sum(payout)+sum(discount)+sum(withdraw)+sum(agy_withdraw)+sum(commission) as profit
        from (
        select sum(a.payout) payout,0 discount,0 withdraw,0 agy_withdraw,0 commission
        from rpt_bet_rcd_day a
        LEFT JOIN mbr_account mbr on a.username=mbr.loginName
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        WHERE 1=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And a.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And a.startday &lt;=DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        UNION all
        select 0,sum(bonus.bonusAmount),0,0,0
        from fund_deposit deposit
        LEFT JOIN mbr_account mbr on deposit.accountId=mbr.id
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        LEFT JOIN opr_act_bonus bonus on bonus.depositId=deposit.id
        where deposit.`status`=1
        and bonus.`status`=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And deposit.createTime &lt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And deposit.createTime &gt;= #{betEndTime}
        </if>
        union ALL
        select 0,0,sum(withdraw.actualArrival),0,0  from fund_acc_withdraw
        withdraw LEFT JOIN mbr_account mbr on withdraw.accountId=mbr.id
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where withdraw.`status`=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And withdraw.createTime &lt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And withdraw.createTime &gt;= #{betEndTime}
        </if>
        union all
        select 0,0,0,sum(agywithdraw.actualArrival) as withdraw,0 from fund_agy_withdraw agywithdraw
        LEFT JOIN mbr_account mbr on agywithdraw.accountId=mbr.id
        LEFT JOIN mbr_group gro on mbr.groupId=gro.id
        LEFT JOIN (select * from agy_account where parentId=0) topagt on mbr.tagencyId=topagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where agywithdraw.`status`=1
        <if test=" parentAgentid !=null and parentAgentid >0 ">
            And topagt.id=#{parentAgentid}
        </if>
        <if test=" agentid !=null and agentid >0 ">
            And agt.id=#{agentid}
        </if>
        <if test=" groupid !=null and groupid >0 ">
            And mbr.groupId=#{groupid}
        </if>
        <if test=" betStrTime !=null and betStrTime !='' ">
            And agywithdraw.createTime &lt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And agywithdraw.createTime &gt;= #{betEndTime}
        </if>
        UNION ALL
        select 0,0,0,0,0 from dual
        ) t
    </select>

    <select id="getRptWinLostList" resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReportModel">
        select startday,sum(betCounts) betCounts,sum(depositCounts) depositCounts,sum(deposit) deposits,sum(withdraw) withdraws,sum(profit) profits,sum(deposit)- sum(withdraw) earnings from (
        select a.startday,count(distinct(a.username)) betCounts,0 depositCounts,0 deposit,0 withdraw,0 profit
        from
        rpt_bet_rcd_day a where 1=1
        <if test=" betStrTime !=null and betStrTime !='' ">
            And a.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And a.startday &lt;=DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        GROUP BY a.startday
        union
        select DATE_FORMAT(tb.createTime,'%Y-%m-%d') date,0 betCounts ,count(distinct(tb.accountId))
        depositCounts,sum(tb.depositAmount) deposit,0 as withdraw,0 profit
        from fund_deposit tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        where tb.`status`=1
        <include refid="createTimeWhere"/>
        GROUP BY DATE_FORMAT(tb.createTime,'%Y-%m-%d')
        union
        select DATE_FORMAT(tb.createTime,'%Y-%m-%d') date,0,0,0 as deposit,sum(tb.actualArrival) as withdraw,0 as profit
        from fund_acc_withdraw tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        where tb.`status`=1
        <include refid="createTimeWhere"/>
        GROUP BY DATE_FORMAT(tb.createTime,'%Y-%m-%d')
        union
        select DATE_FORMAT(tb.applicationTime,'%Y-%m-%d') date,0,0,0,0,sum(tb.bonusAmount) profit
        from opr_act_bonus tb
        where tb.`status`=1
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.applicationTime &gt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.applicationTime &lt;= #{betEndTime}
        </if>
        GROUP BY
        DATE_FORMAT(tb.applicationTime, '%Y-%m-%d')
        ) t
        GROUP BY startday
        ORDER BY 1 desc
    </select>

    <select id="getRptWinLostTotal" resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReportModel">
        select '总计' as startday, sum(betCounts) as betCounts,sum(depositCounts) as depositCounts,sum(deposits) as deposits,sum(withdraws) as withdraws,sum(profits) as profits,sum(deposits)- sum(withdraws) earnings from
        (<include refid="rptWinLost"/>) t
    </select>

    <select id="getRptWinLostGroup" resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReportModel">
        select startday,topAgent,topAgentId,agent,agentId,mbrGroup,sum(betCounts) as betCounts,sum(depositCounts) as depositCounts,sum(deposits) as deposits,sum(withdraws) as withdraws,sum(profits) profits,sum(deposits)- sum(withdraws) earnings
        from(
        <include refid="rptWinLost"/>
        ) t
        group by startday,topAgent,topAgentId,agent,agentId,mbrGroup
    </select>

    <select id="getRptWinLostGroupAgent" resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReportModel">
        select startday,topAgent,topAgentId,agent,agentId,sum(betCounts) as betCounts,sum(depositCounts) as depositCounts,sum(deposits) as deposits,sum(withdraws) as withdraws,sum(profits) profits,sum(deposits)- sum(withdraws) earnings
        from(
        <include refid="rptWinLost"/>
        ) t
        group by startday,topAgent,topAgentId,agent,agentId
    </select>

    <select id="getRptWinLostGroupUser" resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReportModel">
        <include refid="rptWinLostGroupUser"/>
    </select>

    <select id="getRptWinLostGroupUserTotal" resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReportModel">
        select  '总计' as startday, sum(depositTimes) as depositTimes,sum(withdrawTimes) withdrawTimes,sum(profitTimes) profitTimes,sum(deposits) deposits,sum(withdraws) withdraws,sum(profits) profits,sum(deposits)- sum(withdraws) earnings from (
        <include refid="rptWinLostGroupUser"/>
        ) t
    </select>

    <sql id="rptWinLost">
        select a.startday,tagt.agyAccount topAgent,tagt.id topAgentId,agt.agyAccount agent,agt.id agentId,g.groupName mbrGroup,count(distinct(a.username)) betCounts,0 depositCounts,0 deposits,0 withdraws,0 profits
        from rpt_bet_rcd_day a
        INNER JOIN mbr_account mbr on a.username=mbr.loginName
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where 1=1
        <include refid="rptWinLostWhere_bet"/>
        GROUP BY a.startday,tagt.agyAccount,agt.agyAccount,g.groupName
        union
        select DATE_FORMAT(tb.createTime,'%Y-%m-%d') startday,tagt.agyAccount topAgent,tagt.id topAgentId,agt.agyAccount agent,agt.id agentId,g.groupName ,0 betCounts ,count(distinct(tb.accountId)) depositCounts,sum(tb.depositAmount) deposit,0 as withdraw,0 profit
        from fund_deposit tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where tb.`status`=1
        <include refid="createTimeWhere"/>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(tb.createTime,'%Y-%m-%d'),tagt.agyAccount,agt.agyAccount,g.groupName
        union
        select DATE_FORMAT(tb.createTime,'%Y-%m-%d') startday,tagt.agyAccount topAgent,tagt.id topAgentId,agt.agyAccount agent,agt.id agentId,g.groupName ,0,0,0 as deposit,sum(tb.actualArrival) as withdraw,0 as profit
        from fund_acc_withdraw tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where tb.`status`=1
        <include refid="createTimeWhere"/>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(tb.createTime,'%Y-%m-%d'),tagt.agyAccount,agt.agyAccount,g.groupName
        union
        select DATE_FORMAT(tb.applicationTime,'%Y-%m-%d') date,tagt.agyAccount topAgent,tagt.id topAgentId,agt.agyAccount agent,agt.id agentId,g.groupName,0,0,0,0,sum(tb.bonusAmount) profit from opr_act_bonus tb
        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where tb.`status`=1
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.applicationTime &gt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.applicationTime &lt;= #{betEndTime}
        </if>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(tb.applicationTime,'%Y-%m-%d'),tagt.agyAccount,agt.agyAccount,g.groupName
    </sql>

    <sql id="rptWinLostGroupUser">
        select startday,userName,userId,mbrGroup,sum(depositTimes) as depositTimes,sum(withdrawTimes) as withdrawTimes,sum(profitTimes) as profitTimes,sum(deposits) as deposits,sum(withdraws) as withdraws
        ,sum(profits) as profits,sum(deposits)- sum(withdraws) earnings from(
        select DATE_FORMAT(tb.createTime,'%Y-%m-%d') startday,mbr.loginName userName,mbr.id userId,g.groupName as mbrGroup,count(1) depositTimes ,0 withdrawTimes,
        0 profitTimes,sum(tb.depositAmount) as deposits,0 withdraws,0 profits
        from fund_deposit tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where tb.`status`=1
        <if test=" userId !=null and userId >0 ">
            And mbr.id=#{userId}
        </if>
        <include refid="createTimeWhere"/>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(tb.createTime,'%Y-%m-%d'),mbr.loginName,g.groupName
        union
        select DATE_FORMAT(tb.createTime,'%Y-%m-%d') date,mbr.loginName,mbr.id userId,g.groupName ,0,count(1) withdrawTimes,0,0,sum(tb.actualArrival) as withdraw,0 as profit
        from fund_acc_withdraw tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where tb.`status`=1
        <if test=" userId !=null and userId >0 ">
            And mbr.id=#{userId}
        </if>
        <include refid="createTimeWhere"/>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(tb.createTime,'%Y-%m-%d'),mbr.loginName,g.groupName
        union
        select DATE_FORMAT(tb.applicationTime,'%Y-%m-%d') date,mbr.loginName,mbr.id userId,g.groupName ,0 depositTimes ,0 withdrawTimes,
        count(tb.accountId) profitTimes,0 as deposits,0 withdraws,sum(tb.bonusAmount) profits
        from opr_act_bonus tb
        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        where tb.`status`=1
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.applicationTime &gt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.applicationTime &lt;= #{betEndTime}
        </if>
        <if test=" userId !=null and userId >0 ">
            And mbr.id=#{userId}
        </if>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(tb.applicationTime,'%Y-%m-%d'),mbr.loginName,g.groupName
        ) t
        group by startday,userName,userId,mbrGroup
    </sql>

    <sql id="createTimeWhere">
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.createTime &gt;= #{betStrTime}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.createTime &lt;= #{betEndTime}
        </if>
    </sql>

    <sql id="agentAndUserGroupWhere">
        <if test="parentAgentIdList != null and parentAgentIdList !='' ">
            AND tagt.id in ( ${parentAgentIdList} )
        </if>
        <if test="agentIdList != null and agentIdList !='' ">
            AND agt.id in ( ${agentIdList} )
        </if>
        <if test="groupIdList != null and groupIdList !='' ">
            AND mbr.groupId in ( ${groupIdList} )
        </if>
        <if test="platform != null">
            AND gm.depotId = #{platform}
        </if>
        <if test="platformList != null and platformList.size > 0">
        AND gm.depotId in
        <foreach collection="platformList" open="(" close=")" separator="," item="platform">
            #{platform}
        </foreach>
        </if>
        <if test="userName !=null and userName !='' ">
            and mbr.loginName like CONCAT('%',#{userName}, '%')
        </if>
    </sql>

    <sql id="agentAndUserGroupWhere_Bouns">
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.applicationtime &gt;= #{betStrTime}
        </if>
        <if test="source != null">
            AND tb.source = #{source}
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.applicationtime &lt;= #{betEndTime}
        </if>
        <if test="agentId !=null">
            and mbr.cagencyId = #{agentId}
        </if>
        <if test="parentAgentId !=null">
            AND tagt.id = #{parentAgentId}
        </if>
        <if test="parentAgentidList != null and parentAgentidList.size() !='' ">
            AND tagt.id in
            <foreach collection="parentAgentidList" item="pAgentId" open="(" close=")" separator=",">
                #{pAgentId}
            </foreach>
        </if>
        <if test="agentIdList != null and agentIdList.size() !='' ">
            AND agt.id in
            <foreach collection="agentIdList" item="agentId" open="(" close=")" separator=",">
                #{agentId}
            </foreach>
        </if>
        <if test="groupIdList != null and groupIdList.size() != 0">
            AND mbr.groupId in
            <foreach collection="groupIdList" item="groupId" open="(" close=")" separator=",">
                #{groupId}
            </foreach>
        </if>
        <if test=" userId !=null and userId !='' ">
            and mbr.id=#{userId}
        </if>
        <if test=" userName !=null and userName !='' ">
            and mbr.loginName like CONCAT('%',#{userName}, '%')
        </if>

        <if test="loginName != null and loginName != ''">
            AND mbr.loginName = #{loginName}
        </if>
        <if test="isTest == 0">
            and not exists (
            select * from agy_tree tree where  tree.childnodeid = mbr.cagencyid and tree.parentid = 4
            )
        </if>
        <if test="isTest == 1">
            and  exists (
            select * from agy_tree tree where  tree.childnodeid = mbr.cagencyid and tree.parentid = 4
            )
        </if>
        <if test="agyAccountStr != null and agyAccountStr != ''">
            and  exists (
            select * from agy_tree tree left join agy_account agy on tree.parentid =agy.id where  tree.childnodeid = mbr.cagencyid and agy.agyAccount LIKE CONCAT('%',#{agyAccountStr}, '%')
            )
        </if>
    </sql>

    <sql id="rptWinLostWhere_bet">
        <if test=" betStrTime !=null and betStrTime !='' ">
            And a.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And a.startday &lt;=DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        <if test="parentAgentIdList != null and parentAgentIdList !='' ">
            AND tagt.id in ( ${parentAgentIdList} )
        </if>
        <if test="agentIdList != null and agentIdList !='' ">
            AND agt.id in ( ${agentIdList} )
        </if>
        <if test="groupIdList != null and groupIdList !='' ">
            AND mbr.groupId in ( ${groupIdList} )
        </if>
        <if test=" userName !=null and userName !='' ">
            and mbr.loginName like CONCAT('%',#{userName}, '%')
        </if>
    </sql>

    <select id="getApiPrefixBySiteCode" parameterType="String" resultType="java.lang.String">
        select DISTINCT ap.prefix from t_cp_site s left join
        t_gm_apiprefix ap on s.id=ap.siteId
        where s.siteCode=#{siteCode}
    </select>

    <select id="getBonusReportList" parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel">
        <include refid="rptBonusReportSql"/>
        order by 1 desc
    </select>

    <select id="getBonusReportListTotal" parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel">
        select '总计' as startday, sum(profitTimes) as profitTimes,sum(profitCounts) profitCounts,sum(profits) profits
        from (<include refid="rptBonusReportSql"/>)t
    </select>

    <select id="getBonusGroupTopAgentReportList"
            parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel">
        select DATE_FORMAT(tb.applicationtime,'%Y-%m-%d') startday,tagt.agyAccount as topAgent,tagt.id
        topAgentId,count(distinct(tb.accountId)) profitTimes,count(1) profitCounts,sum(tb.bonusAmount) profits
        from opr_act_bonus tb
        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
        LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
        LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
        where tb.`status`=1
        <include refid="activityWhere"/>
        <include refid="agentAndUserGroupWhere_Bouns"/>
        GROUP BY DATE_FORMAT(tb.applicationtime,'%Y-%m-%d'),tagt.agyAccount
    </select>

    <select id="getBonusGroupAgentReportList"
            parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel">
        select DATE_FORMAT(tb.applicationtime,'%Y-%m-%d') startday,agt.agyAccount as agent,agt.id
        agentId,agt.parentId topAgentId,count(distinct(tb.accountId)) profitTimes,count(1) profitCounts,sum(tb.bonusAmount) profits
        from opr_act_bonus tb
        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
        LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
        LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
        where tb.`status`=1
        <include refid="activityWhere"/>
        <include refid="agentAndUserGroupWhere_Bouns"/>
        GROUP BY DATE_FORMAT(tb.applicationtime,'%Y-%m-%d'),agt.agyAccount
    </select>

    <select id="getBonusGroupUserReportList"
            parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel">
        select DATE_FORMAT(tb.applicationtime,'%Y-%m-%d') startday,g.groupName mbrGroup,mbr.loginName
        userName,count(distinct(tb.accountId)) profitTimes,count(1) profitCounts,sum(tb.bonusAmount) profits
        from opr_act_bonus tb
        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
        LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
        LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
        where tb.`status`=1
        <include refid="activityWhere"/>
        <include refid="agentAndUserGroupWhere_Bouns"/>
        GROUP BY DATE_FORMAT(tb.applicationtime,'%Y-%m-%d'),g.groupName,mbr.loginName
    </select>

    <select id="getBonusGroupUserTotal" parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.RptWinLostModel">
        SELECT * FROM (
	        SELECT 
	        	DATE_FORMAT(tb.applicationTime,'%Y-%m-%d') startday,tagt.agyAccount topAgent,agt.agyAccount
		        agent, agt.parentId topAgentId, g.groupName mbrGroup,mbr.loginName userName,mbr.id userId,count(distinct(tb.accountId))
		        profitTimes,COUNT(1) profitCounts,SUM(IF(tb.source = 3, -1 * tb.bonusamount, tb.bonusamount)) profits
	        from opr_act_bonus tb
	        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
	        LEFT JOIN mbr_group g on mbr.groupId=g.id
	        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
	        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
	        LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
	        LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
	        LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
	        where tb.`status`=1
	        <include refid="activityWhere"/>
	        <include refid="agentAndUserGroupWhere_Bouns"/>
	        GROUP by DATE_FORMAT(tb.applicationTime,'%Y-%m-%d'),tagt.agyAccount,agt.agyAccount,g.groupName,mbr.loginName
        ) t
        group by startday,userName,userId,mbrGroup
    </select>

    <select id="getBonusList" parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.TransactionModel">
        SELECT 
       		activity.activityName,acttmpl.tmplName catName,CONCAT(tb.orderPrefix,tb.orderNo),
       		tb.applicationTime,IF(tb.source = 3, tb.bonusAmount * -1, tb.bonusAmount) bonusAmount,tb.orderNo,activity.isonline,
    		mbr.loginName userName,g.groupName mbrGroup,tagt.agyAccount topAgent,
    		agt.agyAccount agent,tb.source,tb.memo,tb.modifyamountuser,tb.auditUser,tb.applicationMemo
        FROM opr_act_bonus tb
	        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
	        LEFT JOIN mbr_group g on mbr.groupId=g.id
	        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
	        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
	        LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
	        LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
	        LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
        WHERE tb.`status`=1
        <include refid="activityWhere"/>
        <include refid="agentAndUserGroupWhere_Bouns"/>
        ORDER BY tb.applicationTime DESC
    </select>

    <select id="getBonusListTotal" parameterType="com.wsdy.saasops.modules.analysis.entity.BounsReportQueryModel"
            resultType="com.wsdy.saasops.modules.analysis.entity.TransactionModel">
        SELECT '总计' as userName, SUM(bonusAmount) as bonusAmount
        FROM (
            SELECT 
            	activity.activityName,acttmpl.tmplName catName,CONCAT(tb.orderPrefix,tb.orderNo),
            	tb.applicationTime, IF(tb.source = 3, -1 * tb.bonusamount, tb.bonusamount) bonusAmount, tb.orderNo,
            	mbr.loginName userName,g.groupName mbrGroup,tagt.agyAccount topAgent,agt.agyAccount agent
            FROM opr_act_bonus tb
            LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
            LEFT JOIN mbr_group g on mbr.groupId=g.id
            LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
            LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
            LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
            LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
            LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
            where tb.`status`=1
            <include refid="activityWhere"/>
            <include refid="agentAndUserGroupWhere_Bouns"/>
        )t
    </select>

    <sql id="rptBonusReportSql">
        SELECT 
        	DATE_FORMAT(tb.applicationtime,'%Y-%m-%d') startday,
        	COUNT(DISTINCT(tb.accountId)) profitTimes,count(1) profitCounts,
        	SUM(IF(tb.source = 3, -1 * tb.bonusamount, tb.bonusamount)) profits
        FROM opr_act_bonus tb
        LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
        LEFT JOIN mbr_group g on mbr.groupId=g.id
        LEFT JOIN (select * from agy_account where parentId=0) tagt on mbr.tagencyId=tagt.id
        LEFT JOIN agy_account agt on mbr.cagencyId=agt.id
        LEFT JOIN opr_act_activity activity on tb.activityId=activity.id
        LEFT JOIN opr_act_rule rule on activity.ruleId=rule.id
        LEFT JOIN t_op_acttmpl acttmpl on rule.actTmplId=acttmpl.id
        WHERE tb.`status`=1
        <include refid="activityWhere"/>
        <include refid="agentAndUserGroupWhere_Bouns"/>
        GROUP BY DATE_FORMAT(tb.applicationtime,'%Y-%m-%d')
    </sql>

    <sql id="activityWhere">
        <if test="activityIdList != null and activityIdList.size() !='' ">
            AND activity.id in
            <foreach collection="activityIdList" item="activityId" open="(" close=")" separator=",">
                #{activityId}
            </foreach>
        </if>
        <if test="catIdList != null and catIdList !='' ">
            AND acttmpl.id in(${catIdList})
        </if>

        <if test=" enablePc !=null and enablePc >0 ">
            And activity.enablePc=1
        </if>
        <if test=" enableMb !=null and enableMb >0 ">
            And activity.enableMb=1
        </if>
        <if test="isOnline !=null">
            And activity.isonline= #{isOnline}
        </if>
    </sql>

    <select id="getRptBetTotalList" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        <include refid="rptBetTotalListSql"/>
    </select>

    <select id="getRptBetTotals" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        select
        '总计' AS startday,
        sum(times) times,
        sum(betTotal) betTotal,
        sum(validBetTotal) validBetTotal,
        sum(payoutTotal) payoutTotal,sum(jackpotBetTotal) jackpotBetTotal,
        sum(jackpotPayoutTotal) jackpotPayoutTotal,
        sum(t.payoutTotal) / sum(t.validBetTotal) * 100 AS winRate,
        sum(t.jackpotBetTotal) - sum(t.jackpotPayoutTotal) AS jackpotWinTotal
        from (<include refid="rptBetTotalListSql"/>) t
    </select>

    <sql id="rptBetTotalListSql">
        select DATE_FORMAT(tb.startday,'%Y-%m-%d') startday,count(distinct(tagt.agyAccount))
        topAgentTimes,count(distinct(agt.agyAccount)) agentTimes,count(tb.username) as
        userCounts,count(distinct(tb.username)) as times,sum(tb.bet) as betTotal,sum(tb.validbet) as validBetTotal,
        sum(tb.payout) as payoutTotal,sum(tb.jackpotBet) as jackpotBetTotal,sum(tb.jackpotPayout) as
        jackpotPayoutTotal,sum(tb.payout)/sum(tb.validbet)*100 as winRate,
        sum(tb.jackpotPayout)-sum(tb.jackpotBet) as jackpotWinTotal
        from rpt_bet_rcd_day tb left join mbr_account mbr on mbr.loginName=tb.username
        left join t_gm_cat ct on tb.gamecategory = ct.catcode
        LEFT join t_gm_depot gm on gm.depotcode = tb.platform
        <include refid="joinUserAndAgentTableSql_Loginname"/>
        where 1=1
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.startday &lt;= DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        <include refid="agentAndUserGroupWhere"/>
        GROUP BY DATE_FORMAT(startday,'%Y-%m-%d')
        ORDER BY DATE_FORMAT(startday,'%Y-%m-%d') DESC
    </sql>

    <select id="getBetDayGroupGameTypeList" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        select DATE_FORMAT(tb.startday,'%Y-%m-%d') startday,gm.depotcode platform,gm.id platformId,ct.catName
        gameCategory,ct.id gameCategoryId,count(tb.username) as userCounts,count(distinct(tb.username)) as
        times,sum(tb.bet) as betTotal,sum(tb.validbet) as validBetTotal,
        sum(tb.payout) as payoutTotal,sum(tb.jackpotBet) as jackpotBetTotal,sum(tb.jackpotPayout) as
        jackpotPayoutTotal,sum(tb.payout)/sum(tb.validbet)*100 as winRate,
        sum(tb.jackpotPayout)-sum(tb.jackpotBet) as jackpotWinTotal
        from rpt_bet_rcd_day tb left join mbr_account mbr on mbr.loginName=tb.username
        left join t_gm_cat ct on tb.gamecategory = ct.catcode
        LEFT join t_gm_depot gm on gm.depotcode = tb.platform
        <include refid="joinUserAndAgentTableSql_Loginname"/>
        where 1=1
        <include refid="gameCodeAndDayWhere"/>
        group by gm.depotcode, ct.catName
    </select>

    <select id="getBetDayGroupTopAgentList" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        select tagt.agyAccount topAgent,tagt.id topAgentId,count(distinct(agt.agyAccount)) as
        agentTimes,count(distinct(tb.username)) as times,sum(tb.bet) as betTotal,sum(tb.validbet) as validBetTotal,
        sum(tb.payout) as payoutTotal,sum(tb.jackpotBet) as jackpotBetTotal,sum(tb.jackpotPayout) as
        jackpotPayoutTotal,sum(tb.payout)/sum(tb.validbet)*100 as winRate,
        sum(tb.jackpotBet)-sum(tb.jackpotPayout) as jackpotWinTotal
        from rpt_bet_rcd_day tb LEFT JOIN mbr_account mbr on mbr.loginName=tb.username
        left join t_gm_cat ct on tb.gamecategory = ct.catcode
        LEFT join t_gm_depot gm on gm.depotcode = tb.platform
        <include refid="joinUserAndAgentTableSql_Loginname"/>
        where 1=1
        <include refid="gameCodeAndDayWhere"/>
        group by tagt.agyAccount
    </select>

    <select id="getBetDayGroupAgentList" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        select tagt.agyAccount topAgent,tagt.id topAgentId,agt.agyAccount agent,agt.id
        agentId,count(distinct(tb.username)) as times,sum(tb.bet) as betTotal,sum(tb.validbet) as validBetTotal,
        sum(tb.payout) as payoutTotal,sum(tb.jackpotBet) as jackpotBetTotal,sum(tb.jackpotPayout) as
        jackpotPayoutTotal,sum(tb.payout)/sum(tb.validbet)*100 as winRate,
        sum(tb.jackpotBet)-sum(tb.jackpotPayout) as jackpotWinTotal
        from rpt_bet_rcd_day tb LEFT JOIN mbr_account mbr on mbr.loginName=tb.username
        left join t_gm_cat ct on tb.gamecategory = ct.catcode
        LEFT join t_gm_depot gm on gm.depotcode = tb.platform
        <include refid="joinUserAndAgentTableSql_Loginname"/>
        where 1=1
        <include refid="gameCodeAndDayWhere"/>
        <if test=" topAgent !=null and topAgent >0 ">
            And tagt.id=#{topAgent}
        </if>
        group by tagt.agyAccount,agt.agyAccount
    </select>

    <select id="getBetDayGroupUserList" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        select tb.username as userName,sum(tb.bet) as betTotal,sum(tb.validbet) as validBetTotal,
        sum(tb.payout) as payoutTotal,sum(tb.jackpotBet) as jackpotBetTotal,sum(tb.jackpotPayout) as
        jackpotPayoutTotal,sum(tb.payout)/sum(tb.validbet)*100 as winRate,
        sum(tb.jackpotBet)-sum(tb.jackpotPayout) as jackpotWinTotal
        from rpt_bet_rcd_day tb LEFT JOIN mbr_account mbr on mbr.loginName=tb.username
        left join t_gm_cat ct on tb.gamecategory = ct.catcode
        LEFT join t_gm_depot gm on gm.depotcode = tb.platform
        <include refid="joinUserAndAgentTableSql_Loginname"/>
        where 1=1
        <include refid="gameCodeAndDayWhere"/>
        <if test=" agent !=null and agent >0 ">
            And agt.id=#{agent}
        </if>
        group by tb.username
    </select>

    <select id="getBetDayByAgentTotal" resultType="com.wsdy.saasops.modules.analysis.entity.RptBetTotalModel"
            parameterType="com.wsdy.saasops.modules.analysis.entity.GameReportModel">
        select count(distinct(tb.username)) as times,sum(tb.bet) as betTotal,sum(tb.validbet) as validBetTotal,
        sum(tb.payout) as payoutTotal,sum(tb.jackpotBet) as jackpotBetTotal,sum(tb.jackpotPayout) as
        jackpotPayoutTotal,sum(tb.payout)/sum(tb.validbet)*100 as winRate,
        sum(tb.jackpotBet)-sum(tb.jackpotPayout) as jackpotWinTotal
        from rpt_bet_rcd_day tb LEFT JOIN mbr_account mbr on mbr.loginName=tb.username
        left join t_gm_cat ct on tb.gamecategory = ct.catcode
        LEFT join t_gm_depot gm on gm.depotcode = tb.platform
        <include refid="joinUserAndAgentTableSql_Loginname"/>
        where 1=1
        <include refid="gameCodeAndDayWhere"/>
        <if test=" topAgentId !=null and topAgentId !='' ">
            And tagt.id =#{topAgentId}
        </if>
        <if test=" agentId !=null and agentId !='' ">
            And agt.id =#{agentId}
        </if>
    </select>

    <sql id="gameCodeAndDayWhere">
        <if test=" betStrTime !=null and betStrTime !='' ">
            And tb.startday &gt;=DATE_FORMAT(#{betStrTime},'%Y-%m-%d')
        </if>
        <if test=" betEndTime !=null and betEndTime !='' ">
            And tb.startday &lt;= DATE_FORMAT(#{betEndTime},'%Y-%m-%d')
        </if>
        <if test="platform != null">
            AND gm.depotId = #{platform}
        </if>
        <if test="platformList != null and platformList.size > 0">
            AND gm.depotId in
            <foreach collection="platformList" open="(" close=")" separator="," item="platform">
                #{platform}
            </foreach>
        </if>
        <if test="catIdList != null and catIdList !='' ">
            AND ct.id in ( ${catIdList} )
        </if>
    </sql>

        <select id="getRptMemberList" resultType="com.wsdy.saasops.modules.analysis.entity.RptMemberModel">
        select startday,sum(deposit) deposits,sum(withdraw) withdraws,sum(newMbr) newMbrs,sum(newDeposits) newDeposits,sum(activeMbr) activeMbrs,sum(totalMbr) totalMbrs,sum(payouts) payouts,sum(validBets)  validBets
        from (
                -- 总派彩/总有效投注
                select DATE_FORMAT(a.startday,#{formate}) startday,0 deposit,0 withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,sum(a.payout) payouts,sum(a.validbet) validBets
                from rpt_bet_rcd_day a where 1=1
                GROUP BY DATE_FORMAT(a.startday,#{formate})
            union all
                -- 总存款
                select DATE_FORMAT(tb.auditTime,#{formate}) date,sum(tb.depositAmount) deposit,0 withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
                from fund_deposit tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
                where tb.`status`=1
                GROUP BY DATE_FORMAT(tb.auditTime,#{formate})
            union all
                -- 总取款
                select DATE_FORMAT(tb.passTime,#{formate}) date,0 deposit,sum(tb.actualArrival) withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
                from fund_acc_withdraw tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
                where tb.`status`=1
                GROUP BY DATE_FORMAT(tb.passTime,#{formate})
            union all
                -- 新增会员/新会员存款数
                select DATE_FORMAT(a.date,#{formate}),0 deposit,0 withdraw,count(DISTINCT a.accountId) newMbr,count(case when a.accountId=d.accountId then 1 else null end) newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
                from (
                select DATE_FORMAT(a.registerTime,'%Y-%m-%d') date, id accountId
                from mbr_account a
                GROUP BY DATE_FORMAT(a.registerTime,'%Y-%m-%d'),id
                ) a left join
                (
                select DATE_FORMAT(d.auditTime,'%Y-%m-%d') date,accountId
                from fund_deposit d where d.`status`=1
                GROUP BY DATE_FORMAT(d.auditTime,'%Y-%m-%d'),accountId
                ) d on a.date=d.date
                GROUP BY DATE_FORMAT(a.date,#{formate})
            union all
                -- 活跃会员
                select date_format(t.date,#{formate}),0 deposit,0 withdraw,0 newMbr,0 newDeposits,count(DISTINCT accountId) activeMbr,0 totalMbr,0 payouts,0 validBets
                from (
                    select DATE_FORMAT(d.auditTime,'%Y-%m-%d') date,accountId
                    from fund_deposit d where d.`status`=1
                    GROUP BY DATE_FORMAT(d.auditTime,'%Y-%m-%d'),accountId
                    union all
                    select DATE_FORMAT(w.passTime,'%Y-%m-%d') date,accountId
                    from fund_acc_withdraw w where w.`status`=1
                    GROUP BY DATE_FORMAT(w.passTime,'%Y-%m-%d'),accountId
                    union all
                    select startday,a.id
                    from rpt_bet_rcd_day r inner join mbr_account a on a.loginName=r.username
                    GROUP BY r.startday,a.id
                ) t
                GROUP BY date_format(t.date,#{formate})
            union all
                -- 日期
                select DISTINCT(date_format(date,#{formate})) date,0 deposit,0 withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
                from (
                    select adddate('2000-01-01',t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) date
                    from
                    (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
                    (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
                    (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
                    (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3
                ) c
            <choose>
                <when test="type != null and type == '2'.toString()">
                    where date between date_sub(NOW(),INTERVAL #{lmt} MONTH) and NOW()
                </when>
                <when test="type == null or type == '1'.toString()">
                    where date between date_sub(NOW(),INTERVAL #{lmt} DAY) and NOW()
                </when>
            </choose>
        ) t
        GROUP BY startday
        ORDER BY 1 desc
        LIMIT #{lmt}
    </select>

    <select id="getRptMemberListEx" resultType="com.wsdy.saasops.modules.analysis.entity.RptMemberModel">
        select startday,sum(deposit) deposits,sum(withdraw) withdraws,sum(newMbr) newMbrs,sum(newDeposits) newDeposits,sum(activeMbr) activeMbrs,sum(totalMbr) totalMbrs,sum(payouts) payouts,sum(validBets)  validBets
        from (
            -- 总派彩/总有效投注
            select DATE_FORMAT(a.startday,#{formate}) startday,0 deposit,0 withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,sum(a.payout) payouts,sum(a.validbet) validBets
            from rpt_bet_rcd_day a
            where  a.startday <![CDATA[ >= ]]> #{startTime} and a.startday <![CDATA[ < ]]> #{endTime}
            GROUP BY DATE_FORMAT(a.startday,#{formate})

            union all
            -- 总存款
            select DATE_FORMAT(tb.auditTime,#{formate}) date,sum(tb.depositAmount) deposit,0 withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
            from fund_deposit tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
            where tb.`status`=1
            and  str_to_date( tb.auditTime, '%Y-%m-%d') <![CDATA[ >= ]]> #{startTime} and str_to_date( tb.auditTime, '%Y-%m-%d') <![CDATA[ < ]]> #{endTime}
            GROUP BY DATE_FORMAT(tb.auditTime,#{formate})

            union all
            -- 总取款
            select DATE_FORMAT(tb.passTime,#{formate}) date,0 deposit,sum(tb.actualArrival) withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
            from fund_acc_withdraw tb LEFT JOIN mbr_account mbr on tb.accountId=mbr.id
            where tb.`status`=1
            and  str_to_date( tb.passTime, '%Y-%m-%d') <![CDATA[ >= ]]> #{startTime} and str_to_date( tb.passTime, '%Y-%m-%d') <![CDATA[ < ]]> #{endTime}
            GROUP BY DATE_FORMAT(tb.passTime,#{formate})

            union all
            -- 新增会员/新会员存款数
            select DATE_FORMAT(a.date,#{formate}),0 deposit,0 withdraw,count(DISTINCT a.accountId) newMbr,count(case when a.accountId=d.accountId then 1 else null end) newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
            from (
                select DATE_FORMAT(a.registerTime,'%Y-%m-%d') date, id accountId
                from mbr_account a
                where  str_to_date( a.registerTime, '%Y-%m-%d') <![CDATA[ >= ]]> #{startTime} and str_to_date( a.registerTime, '%Y-%m-%d') <![CDATA[ < ]]> #{endTime}
                GROUP BY DATE_FORMAT(a.registerTime,'%Y-%m-%d'),id
            ) a left join
            (
                select DATE_FORMAT(d.auditTime,'%Y-%m-%d') date,accountId
                from fund_deposit d where d.`status`=1
                GROUP BY DATE_FORMAT(d.auditTime,'%Y-%m-%d'),accountId
            ) d on a.date=d.date
            GROUP BY DATE_FORMAT(a.date,#{formate})

            union all
            -- 活跃会员: 存/取款 投注
            select date_format(t.date,#{formate}),0 deposit,0 withdraw,0 newMbr,0 newDeposits,count(DISTINCT accountId) activeMbr,0 totalMbr,0 payouts,0 validBets
            from (
                select DATE_FORMAT(d.auditTime,'%Y-%m-%d') date,accountId
                    from fund_deposit d where d.`status`=1
                    GROUP BY DATE_FORMAT(d.auditTime,'%Y-%m-%d'),accountId

                union all
                select DATE_FORMAT(w.passTime,'%Y-%m-%d') date,accountId
                    from fund_acc_withdraw w where w.`status`=1
                    GROUP BY DATE_FORMAT(w.passTime,'%Y-%m-%d'),accountId

                union all
                select startday,a.id
                    from rpt_bet_rcd_day r inner join mbr_account a on a.loginName=r.username
                    GROUP BY r.startday,a.id
            ) t
            where str_to_date( t.date, '%Y-%m-%d') <![CDATA[ >= ]]> #{startTime} and str_to_date( t.date, '%Y-%m-%d') <![CDATA[ < ]]> #{endTime}
            GROUP BY date_format(t.date,#{formate})

            union all
            -- 日期字段
            select DISTINCT(date_format(date,#{formate})) date,0 deposit,0 withdraw,0 newMbr,0 newDeposits,0 activeMbr,0 totalMbr,0 payouts,0 validBets
            from (
                select adddate('2010-01-01',t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) date
                from
                (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
                (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
                (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
                (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3
            ) c
            where  c.date <![CDATA[ >= ]]> #{startTime} and c.date <![CDATA[ < ]]> #{endTime}
        ) t
        GROUP BY startday
        ORDER BY 1 desc
    </select>

    <select id="getRegisterCounts" parameterType="String" resultType="java.lang.Integer">
        select count(1) from mbr_account a where a.registerTime &lt;= date_format(#{date},'%Y-%m-%d 23:59:59')
    </select>
    <select id="getRegisterCountsByMonth" parameterType="String" resultType="java.lang.Integer">
        select count(1) from mbr_account a where  #{date} >= date_format(a.registerTime,'%Y-%m')
    </select>

    <select id="findWinLostList" resultType="com.wsdy.saasops.modules.analysis.entity.WinLostReport">
        select '股东' level,count(tb1.username) total,sum(tb1.bet) betTotal,sum(tb1.validbet) validbetTotal,sum(tb1.payout) payoutTotal,CONCAT(tb1.platform,tb1.catName) categoryTotal,truncate((sum(tb1.payout)/sum(tb1.validbet))*100,2) winLostRatio from
        (select rbrd.username,rbrd.platform,tb.catName ,sum(rbrd.bet) bet,sum(rbrd.validbet) validbet,sum(rbrd.payout) payout from rpt_bet_rcd_day rbrd
        inner join mbr_account ma on rbrd.username=ma.loginName
        inner join agy_account aa on ma.tagencyId=aa.id
        inner join (select tb1.depotName platform,tb1.depotId,tb2.catName,tb2.id catId,tb1.gameCode codeid,tb1.gameName codename,tb2.id gameTypeId,tb1.subCatId  from
        (SELECT * FROM (select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
        union select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
        union select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
        union select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
        union select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
        union select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !='' ) d
        GROUP BY d.depotId,d.catId,d.gameCode
        ORDER BY d.gameCode )tb1,t_gm_cat tb2 where tb1.catId=tb2.id ) tb on rbrd.platform=tb.platform and rbrd.gametype=tb.codeid
        <include refid="WinLost_where"/>
        group by tb.platform,tb.catName,rbrd.username) tb1
        GROUP BY tb1.platform,tb1.catName
    </select>
    <select id="findWinLostListOfTagency" resultType="com.wsdy.saasops.modules.analysis.entity.WinLostReport">
        select '总代' level,tagencyId,userName,count(DISTINCT tb1.user) total,sum(tb1.bet) betTotal,sum(tb1.validbet) validbetTotal,sum(tb1.payout) payoutTotal,CONCAT(tb1.platform,tb1.catName) categoryTotal,truncate((sum(tb1.payout)/sum(tb1.validbet))*100,2) winLostRatio from
        (select aa.id tagencyId,aa.agyAccount userName,rbrd.username user,rbrd.platform,tb.catName ,sum(rbrd.bet) bet,sum(rbrd.validbet) validbet,sum(rbrd.payout) payout from rpt_bet_rcd_day rbrd
        inner join mbr_account ma on rbrd.username=ma.loginName
        inner join agy_account aa on ma.tagencyId=aa.id
        inner join (select tb1.depotName platform,tb1.depotId,tb2.catName,tb2.id catId,tb1.gameCode codeid,tb1.gameName codename,tb2.id gameTypeId,tb1.subCatId  from
        (SELECT * FROM (select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
        union select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
        union select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
        union select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
        union select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
        union select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !='' ) d
        GROUP BY d.depotId,d.catId,d.gameCode
        ORDER BY d.gameCode)tb1,t_gm_cat tb2 where tb1.catId=tb2.id ) tb on rbrd.platform=tb.platform and rbrd.gametype=tb.codeid
        <include refid="WinLost_where"/>
        group by tb.platform,tb.catName,rbrd.username) tb1
        GROUP BY tb1.tagencyId
    </select>
    <select id="findWinLostListByTagencyId" resultType="com.wsdy.saasops.modules.analysis.entity.WinLostReport">
        select '代理' level,cagencyId,tagencyId,userName,count(DISTINCT tb1.user) total,sum(tb1.bet) betTotal,sum(tb1.validbet) validbetTotal,sum(tb1.payout) payoutTotal,CONCAT(tb1.platform,tb1.catName) categoryTotal,truncate((sum(tb1.payout)/sum(tb1.validbet))*100,2) winLostRatio  from
        (select aa.id cagencyId,aa.parentId tagencyId, aa.agyAccount userName,rbrd.username user,rbrd.platform,tb.catName ,sum(rbrd.bet) bet,sum(rbrd.validbet) validbet,sum(rbrd.payout) payout from rpt_bet_rcd_day rbrd
        inner join mbr_account ma on rbrd.username=ma.loginName
        inner join agy_account aa on ma.cagencyId=aa.id
        inner join (select tb1.depotName platform,tb1.depotId,tb2.catName,tb2.id catId,tb1.gameCode codeid,tb1.gameName codename,tb2.id gameTypeId,tb1.subCatId  from
        (SELECT * FROM (select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
        union select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
        union select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
        union select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
        union select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
        union select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !='' ) d
        GROUP BY d.depotId,d.catId,d.gameCode)tb1,t_gm_cat tb2 where tb1.catId=tb2.id ) tb on rbrd.platform=tb.platform and rbrd.gametype=tb.codeid
        <include refid="WinLost_where"/>
        group by tb.platform,tb.catName,rbrd.username ) tb1
        GROUP BY tb1.cagencyId
    </select>
    <select id="findWinLostListByCagencyId" parameterType="com.wsdy.saasops.modules.analysis.entity.WinLostReport" resultType="com.wsdy.saasops.modules.analysis.entity.WinLostReport">
        select '会员' level,accountId, tagencyId, userName,count(DISTINCT tb1.user) total,sum(tb1.bet) betTotal,sum(tb1.validbet) validbetTotal,sum(tb1.payout) payoutTotal,CONCAT(tb1.platform,tb1.catName) categoryTotal,truncate((sum(tb1.payout)/sum(tb1.validbet))*100,2) winLostRatio  from
        (select ma.id accountId, ma.tagencyId, ma.loginName userName,rbrd.username user,rbrd.platform,tb.catName ,sum(rbrd.bet) bet,sum(rbrd.validbet) validbet,sum(rbrd.payout) payout from rpt_bet_rcd_day rbrd
        inner join mbr_account ma on rbrd.username=ma.loginName
        inner join agy_account aa on ma.cagencyId=aa.id
        inner join (select tb1.depotName platform,tb1.depotId,tb2.catName,tb2.id catId,tb1.gameCode codeid,tb1.gameName codename,tb2.id gameTypeId,tb1.subCatId  from
        (SELECT * FROM (select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
        union select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
        union select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
        union select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
        union select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
        union select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !='' ) d
        GROUP BY d.depotId,d.catId,d.gameCode )tb1,t_gm_cat tb2 where tb1.catId=tb2.id ) tb on rbrd.platform=tb.platform and rbrd.gametype=tb.codeid
        <include refid="WinLost_where"/>
        group by tb.platform,tb.catName,rbrd.username ) tb1
        GROUP BY tb1.accountId
    </select>
    <sql id="WinLost_where">
        <where>
            <if test=" startTime !=null and startTime !='' ">
                and rbrd.startday <![CDATA[ >= ]]>#{startTime}
            </if>
            <if test=" endTime !=null and endTime !='' ">
                and rbrd.startday <![CDATA[ <= ]]>#{endTime}
            </if>
            <if test=" depotId !=null and depotId !='' ">
                and  tb.depotId=${depotId}
            </if>
            <if test=" catId !=null and catId !='' ">
                and  tb.catId=${catId}
            </if>
            <if test=" subCatId !=null and subCatId !='' ">
                and  tb.subCatId in (${subCatId})
            </if>
            <if test=" tagencyId !=null and tagencyId !='' ">
                and  ma.tagencyId=${tagencyId}
            </if>
            <if test=" cagencyId !=null and cagencyId !='' ">
                and  ma.cagencyId=${cagencyId}
            </if>
            <if test=" accountId !=null and accountId !='' ">
                and  ma.id=${accountId}
            </if>
        </where>
    </sql>
    <select id="getDepot" resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel" parameterType="java.lang.String">
        select a.id as `key`,a.depotName as `value` from t_gm_depot a
        where a.available=1
        AND exists (
        SELECT api.depotId FROM t_gm_api api
        left join t_gm_apiprefix fix on api.id=fix.apiId
        left join t_cp_site site on site.id=fix.siteId
        WHERE api.depotId=a.id and site.siteCode= #{siteCode}
        )
	</select>
    <select id="getGameCat"  resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel">
        select DISTINCT c.id as `key`,c.catName as `value` from t_gm_depot d
        inner JOIN t_gm_depotcat dc on d.id=dc.depotId
        inner JOIN t_gm_cat c on dc.catId=c.id
        <where>
            <if test="parameter !=null and _parameter !=''">
                and d.id=#{depotId}
            </if>
            and c.parentId=0
        </where>
    </select>
    <select id="getSubGameCat"  resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel">
        select DISTINCT c.id as `key`,c.catName as `value` from t_gm_depot d
        inner JOIN t_gm_depotcat dc on d.id=dc.depotId
        inner JOIN t_gm_cat c on dc.catId=c.id
        <where>
            <if test="depotId !=null and depotId!=''">
                and d.id=#{depotId}
            </if>
            <if test="catId !=null and catId!=''">
                and c.parentId=#{catId}
            </if>
            <if test="catId ==null or catId ==''">
                and c.parentId in (select id from t_gm_cat where parentId=0)
            </if>
        </where>
    </select>
    <select id="getValidBetAccountCounts"  resultType="java.lang.Integer">
        select count(DISTINCT rbrd.username) from rpt_bet_rcd_day rbrd
        inner join mbr_account ma on rbrd.username=ma.loginName
        inner join agy_account aa on ma.cagencyId=aa.id
        inner join (select tb1.depotName platform,tb1.depotId,tb2.catName,tb2.id catId,tb1.gameCode codeid,tb1.gameName codename,tb2.id gameTypeId,tb1.subCatId from
        (SELECT * FROM (select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
        union select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
        union select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
        union select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
        union select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
        union select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !='' ) d
        GROUP BY d.depotId,d.catId,d.gameCode
        ORDER BY d.gameCode)tb1,t_gm_cat tb2 where tb1.catId=tb2.id ) tb on rbrd.platform=tb.platform and rbrd.gametype=tb.codeid
        <include refid="WinLost_where"/>
    </select>
    <select id="getDepotName"  resultType="java.lang.String">
        select tgd.depotCode from t_gm_depot tgd where tgd.id=#{depotId}
    </select>
    <select id="getCatName"  resultType="java.lang.String">
        select tgc.catName from t_gm_cat tgc where tgc.id=#{catId}
    </select>
    <select id="getGameCatName"  resultType="java.lang.String">
        select tgc.catName from
        (SELECT * FROM (select id,depotId,depotName,catId,gameCode,gameName,subCatId from t_gm_game where gameCode !=''
        union select id,depotId,depotName,catId,mbGameCode,gameName,subCatId from t_gm_game where mbGameCode !=''
        union select id,depotId,depotName,catId,adGameCode,gameName,subCatId from t_gm_game where  adGameCode !=''
        union select id,depotId,depotName,catId,downGameCode,gameName,subCatId from t_gm_game where  downGameCode !=''
        union select id,depotId,depotName,catId,embeddedCode,gameName,subCatId from t_gm_game where  embeddedCode !=''
        union select id,depotId,depotName,catId,embeddedCode1,gameName,subCatId from t_gm_game where  embeddedCode1 !='' ) d
        GROUP BY d.depotId,d.catId,d.gameCode
        ORDER BY d.gameCode) tb1
        inner JOIN t_gm_cat tgc on tb1.catId=tgc.id
        where tb1.depotName=#{depotCode} and tb1.gameCode=#{gameCode} LIMIT 1;
    </select>
    <select id="getGameCodeByCat"  resultType="com.wsdy.saasops.modules.operate.entity.TGmGame">
        select * from t_gm_game tgg
        where tgg.gameCode is not null
        <if test="depotName !=null and depotName!=''">
            and tgg.depotName=#{depotName}
        </if>
        <if test="catId !=null and catId!=''">
            and tgg.catId=#{catId}
        </if>
        <if test="subCatId !=null and subCatId!=''">
            and tgg.subCatId=#{subCatId}
        </if>
    </select>

    <select id="getDepotNameToDepotCode"  resultType="java.lang.String">
        select tgd.depotCode from t_gm_depot tgd where tgd.id=#{depotName}
    </select>

    <!-- 2019.5.16 -->
    <sql id="select_where2">
        <where>
            tgd.depotCode in
            <foreach collection="depotCodes" open="(" close=")" separator="," item="depotCode">
                #{depotCode}
            </foreach>
        </where>
    </sql>
    <select id="getAllDepotCodeToDepotName"  parameterType="java.util.Map" resultType="com.wsdy.saasops.modules.base.entity.GmDepot">
        select tgd.depotName depotName,tgd.depotCode depotCode, tgd.id id from t_gm_depot tgd
        <include refid="select_where2"/>
    </select>

    <select id="findAccountRptCount" resultType="java.lang.Integer">
        SELECT count(*) FROM rpt_bet_rcd_day WHERE username=#{username}
    </select>
    <select id="getRetentionRatePlayer"
            resultType="com.wsdy.saasops.modules.analysis.dto.RetentionRatePlayerDto">
        SELECT
            ma.id accountid, ma.loginname,
        DATE_FORMAT( fd.audittime, '%Y-%m-%d' ) firstchargeDate
        FROM
            mbr_account ma
        INNER JOIN fund_deposit fd ON ma.id = fd.accountid
        INNER JOIN agy_account  aa ON ma.cagencyid = aa.id
        WHERE
            fd.STATUS = 1
        AND fd.audittime <![CDATA[ >= ]]> #{startTime}
        AND fd.audittime <![CDATA[ <= ]]> #{endTime}
        AND (
        SELECT
        count(*)
        FROM
        fund_deposit fd2
        WHERE
        fd2.audittime <![CDATA[ < ]]> fd.audittime
                        AND fd2.accountid = fd.accountid
                        AND fd2.STATUS = 1
        ) = 0

        <if test="agentName !=null and agentName!=''">
                AND aa.agyaccount = #{agentName}
        </if>

    </select>



    <select id="getRetentionRateResult"
            resultType="com.wsdy.saasops.modules.analysis.dto.RetentionRateResultDto">

            SELECT count(DISTINCT t.accountid) num, time  date from (

            SELECT
            fd.accountid,
            DATE_FORMAT ( fd.audittime, '%Y-%m-%d' ) time
            FROM
            fund_deposit fd
            WHERE
            fd.STATUS = 1
            AND fd.audittime <![CDATA[ >= ]]> #{startTime}
            AND fd.audittime <![CDATA[ <= ]]> #{endTime}

            AND fd.accountId in
            <foreach collection="retentionRateAccountIdList" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
            UNION
            SELECT
            ma.id  accountid,
            rbrd.startday time
            FROM
            rpt_bet_rcd_day rbrd
            INNER JOIN mbr_account ma ON ma.loginname = rbrd.username
            WHERE
            rbrd.startday <![CDATA[ >= ]]>  #{startTime}
            AND rbrd.startday <![CDATA[ <= ]]>  #{endTime}

            AND ma.id in
            <foreach collection="retentionRateAccountIdList" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
            ) t
            GROUP BY t.time
    </select>
    <select id="getRetentionRateDailyActiveReport"
            resultType="com.wsdy.saasops.modules.analysis.dto.RetentionRatePlayerDto">
        SELECT
        ma.id accountid, ma.loginname,
        DATE_FORMAT( fd.audittime, '%Y-%m-%d' ) firstchargeDate
        FROM
        mbr_account ma
        INNER JOIN fund_deposit fd ON ma.id = fd.accountid
        LEFT JOIN agy_account  aa ON ma.cagencyid = aa.id
        WHERE
        fd.STATUS = 1
        AND fd.audittime <![CDATA[ >= ]]> #{startTime}
        AND fd.audittime <![CDATA[ <= ]]> #{endTime}
        AND (
        SELECT
        count(*)
        FROM
        fund_deposit fd2
        WHERE
        fd2.audittime <![CDATA[ < ]]> fd.audittime
        AND fd2.accountid = fd.accountid
        AND fd2.STATUS = 1
        ) = 0

        <if test="userName !=null and userName!=''">
            AND ma.loginname = #{userName}
        </if>

        <if test="agentName !=null and agentName!=''">
            AND aa.agyaccount = #{agentName}
        </if>
        order by fd.audittime desc

    </select>

    <select id="getUserDailyDepositAmount"
            resultType="com.wsdy.saasops.modules.analysis.dto.DepositOrBetDailyDto">
        SELECT sum(fd.depositamount) as amountSum, ma.loginname as userName, DATE_FORMAT( fd.audittime, '%Y-%m-%d' ) as date
        FROM fund_deposit fd
        INNER JOIN mbr_account ma ON ma.id = fd.accountid
        WHERE
        fd.audittime &gt;= #{startTime}
        AND fd.audittime &lt;= #{endTime}

        <if test="userNames != null and userNames.size()>0">
            AND ma.loginname IN
            <foreach item="userName" collection="userNames" open="(" separator="," close=")">
                #{userName}
            </foreach>
        </if>
        GROUP BY ma.loginname, DATE_FORMAT( fd.audittime, '%Y-%m-%d' )
    </select>

    <select id="getUserDailyBetAmount"
            resultType="com.wsdy.saasops.modules.analysis.dto.DepositOrBetDailyDto">
        SELECT sum(validbet) as amountSum, userName, startday as date
        from rpt_bet_rcd_day
        WHERE
        startday &gt;= #{startTime}
        AND startday &lt;= #{endTime}
        <if test="userNames != null and userNames.size()>0">
            AND username IN
            <foreach item="userName" collection="userNames" open="(" separator="," close=")">
                #{userName}
            </foreach>
        </if>
        GROUP BY username, startday
    </select>

    <select id="getBetPointUsernameByDate" resultType="java.lang.String">
        select DISTINCT t.username from (
            -- 投注人数
            select
                DISTINCT t.username username
            FROM rpt_bet_rcd_day t
            where 1=1 AND t.bet > 0
                AND t.startday <![CDATA[ >= ]]> #{startTime}
                AND t.startday <![CDATA[ <= ]]> #{endTime}

            UNION ALL
            -- 存款人数
            select
                DISTINCT mbr.loginname username
            from fund_deposit t
            LEFT JOIN mbr_account mbr on mbr.id =t.accountId
            where t.depositamount > 0
                AND t.modifytime <![CDATA[ >= ]]> #{startTime}
                AND t.modifytime <![CDATA[ <= ]]> #{endTime}

            UNION ALL
            -- 优惠人数
            SELECT
                DISTINCT mbr.loginname username
            FROM
            (-- 红利
                SELECT
                    DISTINCT accountId
                FROM
                opr_act_bonus t
                WHERE
                    t.status = 1
                    AND t.audittime <![CDATA[ >= ]]> #{startTime}
                    AND t.audittime <![CDATA[ <= ]]> #{endTime}
                UNION ALL
                -- 任务
                SELECT
                    DISTINCT accountId
                FROM
                task_bonus t
                WHERE
                    t.time <![CDATA[ >= ]]> #{startTime}
                    AND t.time <![CDATA[ <= ]]> #{endTime}
            ) t
            LEFT JOIN mbr_account mbr ON mbr.id = t.accountid
        ) t
	</select>

    <select id="getBetPointByUsername" resultType="com.wsdy.saasops.modules.member.entity.MbrAccountOther">
        select t.loginName loginName, ROUND((SUM(t.totalBet) / (SUM(t.totalDeposit) + SUM(t.totalBonus))), 2) betPoint
        from (
            select
                t.username loginName,
                sum( t.bet ) totalBet,
                0 totalDeposit,
                0 totalBonus
            FROM rpt_bet_rcd_day t
            where 1=1 AND t.bet > 0
                <if test="usernames != null and usernames.size()>0">
                    AND t.username IN
                    <foreach item="username" collection="usernames" open="(" separator="," close=")">
                        #{username}
                    </foreach>
                </if>
                GROUP BY t.username

            UNION ALL
            -- 总存款
            select
                mbr.loginname loginName,
                0 totalBet,
                sum( t.actualarrival ) totalDeposit,
                0 totalBonus
            from fund_deposit t
            LEFT JOIN mbr_account mbr on mbr.id =t.accountId
            where t.status = 1 AND t.depositamount > 0
                <if test="usernames != null and usernames.size()>0">
                    AND mbr.loginname IN
                    <foreach item="username" collection="usernames" open="(" separator="," close=")">
                        #{username}
                    </foreach>
                </if>
                GROUP BY mbr.loginname

            UNION ALL
            -- 总优惠
            SELECT
                t.loginName loginName,
                0 totalBet,
                0 totalDeposit,
                sum( t.totalBonus ) totalBonus
            FROM
            (-- 红利
                SELECT
                    t.loginname loginName,
                    sum( t.bonusamount ) totalBonus
                FROM opr_act_bonus t
                WHERE t.status = 1
                    <if test="usernames != null and usernames.size()>0">
                        AND t.loginname IN
                        <foreach item="username" collection="usernames" open="(" separator="," close=")">
                            #{username}
                        </foreach>
                    </if>
                    GROUP BY t.loginname

                UNION ALL
                -- 任务
                SELECT
                    t.loginname loginName,
                    sum( t.bonusamount ) totalBonus
                FROM task_bonus t
                WHERE 1=1
                    <if test="usernames != null and usernames.size()>0">
                        AND t.loginname IN
                        <foreach item="username" collection="usernames" open="(" separator="," close=")">
                            #{username}
                        </foreach>
                    </if>
                    GROUP BY t.loginname
            ) t
            GROUP BY t.loginName
        ) t GROUP BY t.loginName
	</select>
    <select id="getPlatFormByCatCode" resultType="com.wsdy.saasops.modules.analysis.entity.SelectModel">
        SELECT
        depot.depotCode as `key`,IFNULL(setg.depotname,depot.depotName) as `value`, depot.id as `id`
        FROM t_gm_depot depot
        LEFT JOIN t_game_logo logo ON logo.depotid = depot.id
        LEFT JOIN set_gm_game setg ON setg.depotid = depot.id AND logo.id = setg.gamelogoid
        LEFT JOIN t_gm_api api ON depot.id=api.depotId
        LEFT JOIN t_gm_apiprefix fix ON api.id=fix.apiId
        LEFT JOIN t_cp_site site ON site.id=fix.siteId
        INNER JOIN saasops_manage.t_gm_depotcat dc ON depot.id = dc.depotId
        INNER JOIN saasops_manage.t_gm_cat c ON dc.catId = c.id
        WHERE site.siteCode=#{siteCode}
        AND fix.prefix=#{siteCode}
        AND fix.available!=0
        AND depot.available = 1
        <if test="catCodeList != null and catCodeList.contains('other')">
            AND c.catcode is NULL
        </if>

        <if test="catCodeList != null and catCodeList.size() > 0 and !catCodeList.contains('other')">
            AND c.catcode IN
            <foreach item="catCode" collection="catCodeList" open="(" separator="," close=")">
                #{catCode}
            </foreach>
        </if>
        GROUP BY depot.depotCode

    </select>

</mapper>